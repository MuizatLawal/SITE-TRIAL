body {
  color: #40514E;
  margin: 0px;
  text-align: center;
  /**Text align center in a container will align all the elements in the container to the value given to the text align property as long as the element has no positioning (width) property set which is rimary to it. But in a situation where there has been a width property primary to it then you have to use the property margin with "auto" value properly set to it**/
  font-family: 'merriweather', serif;
}

hr {
  border-style: none;
  border-top-style: dotted;
  border-color: #dbe0e0;
  border-width: 6px;
  margin: 90px auto;
  width: 6%;
}

h1 {
  color: #66BFBF;
  font-size: 562.5%; 
  /**Dynamic font unit (dynamic in the sense that it suits different font size set in individual mobile devices) is specified in percentage and em (em is the phonetic pronuciation off letter M, em is the representation entire size of letter M, so if we say 1em i.e. 1x the size of letter M likewise 2x 3x and so forth). A hundred percentage font size is equivalent to 16px. In case you have a preferred font size whic is in px but you want it displayed in percentage, go ahead and divide your preferred px by 16 and the answer you derive will be what you will inut into your css in percentage. For instance, I want to represent 90px in percentage so 90/16=5.625 (autually the correct answer is 5.625 but i dont know why it should be presented otherwise, I will read more on it and get back to youðŸ™‚). Also, 1em is font size 16px so as we did in percentage, 90/16=5.625 represented in em....16px is equal to 100% and 1em respectively...dynamic sizes are inherited unlike static sizes. REM refers to the root em and it makes the browser ignore the inherited font size. REM is most recommended while using dynamic font unit because it is the most adaptable and most reliable unit**/
  margin: 2.6rem auto 0 auto;
  /**
  width: 10%;
  margin: 0 auto; i.e. top and bottom has 0px whle right and left has auto value (middle). check css doc on mdn for margin for more explanation
  **/
  font-family: 'Sacramento', 'Cedarville Cursive', serif;
}

h2 {
  font-family: 'montserrat', sans-serif;
  color: #66BFBF;
  font-weight: normal;
  padding-bottom: 10px;
}

h3 {
  font-family: 'montserrat', sans-serif;
  color: #11999E;
}

a {
  color: #11999E;
  font-family: 'merriweather', serif;
  margin: 10px 20px;
  text-decoration: none;
}

a:hover {
  color: #EAF6F6;
}

p {
  line-height: 2;
}

.bottom-flower {
  margin-top: 540px;
}

.con-h1-p {
  position: relative;
  top: 220px;
}

.con-flo-6 {
  background-color: rb(174, 192, 11);
  display: inline-block; 
  position: relative;
}

.con-flo-7{
  background-color: blac;
  display: inline-block;
  position: relative;
  top: 30px;
  right: 50px;
}

.con-flo-8 {
  background-color: rg(23, 78, 161);
  display: inline-block; 
  position: relative;
  bottom: 90px;
}

.flower-4 {
  position: absolute;
  right: 300px;
  top: 30px;
  width: 200px;
}

.flower-5 {
  display: block;
  position: absolute;
  left: 300px;
  top: 360px;
  width: 200px;
}

.mountain {
  margin-top: 120px;
}

.flower-6{
  width: 200px;
}

.flower-7{
  width: 200px;
}

.flower-8{
  width: 200px; 
}

.top-container {
  background-color: #EAF6F6;
  position: relative;
  padding-top: 200px;
}

.who {
  margin: auto;
  width: 30%;
}

.food-lover {
  margin: 40px auto 60px;
  width: 40%;
}

.who-I-am {
  color: #40514E;
}

.bn {
  border: none;
  border-radius: 28px;
}

.btn {
  background: #11CDD4;
  background-image: -webkit-linear-gradient(top, #11CDD4, #11999E);
  background-image: -moz-linear-gradient(top, #11CDD4, #11999E);
  background-image: -ms-linear-gradient(top, #11CDD4, #11999E);
  background-image: -o-linear-gradient(top, #11CDD4, #11999E);
  background-image: linear-gradient(to bottom, #11CDD4, #11999E);
  border: none;
  -webkit-border-radius: 28;
  -moz-border-radius: 28;
  border-radius: 8px;
  font-family: 'merriweather', serif;
  color: #ffffff;
  font-size: 20px;
  padding: 10px 20px 10px 20px;
  text-decoration: none;
}

.btn:hover {
  background: #30E3CB;
  background-image: -webkit-linear-gradient(top, #30E3CB, #2BC4AD);
  background-image: -moz-linear-gradient(top, #30E3CB, #2BC4AD);
  background-image: -ms-linear-gradient(top, #30E3CB, #2BC4AD);
  background-image: -o-linear-gradient(top, #30E3CB, #2BC4AD);
  background-image: linear-gradient(to bottom, #30E3CB, #2BC4AD);
  text-decoration: none;
}

.bottom-container {
  background-color: #66BFBF;
  margin: 0;
  padding: 50px 0 20px 0;
}

.middle-container {
  margin: 100px 0;
}

.footer-link {
  color: #11999E;
}

.copy {
  color: #EAF6F6;
  font-size: 0.75rem;
  padding: 20px 0;
}

/**you can make a circle with border-radiu:50% and the same value set to height and width**/
.Muizat-pro-Pic {
width: 200px;
height: 200px;
border-radius: 50%;
}

/**while trying to not make an element float you can defloat it by overwriting the side where the float property is valued e.g. *( while this star stands for the object you dont want to float) {clear:left} in case the float property is left. this clear property can be seen as an anti float property.**/

.skill-pic{
  width: 25%;
  heght: 200px;
  border-radius: 50%;
  width: 25%;
  float: left;
  margin-right: 30px;
}

.cooking-pic {
  width: 25%;
  heiht: 200px;
  border-radius: 50%;
  float: right;
  margin-left: 30px;
}  

/**Use float only when you wish to wrap text around certain element**/
  
.sewing-pic {
  width: 25%;
  height: 168.625px;
  border-radius: 50%;
  float: left;
  margin-right: 30px;
}  
/**relative positoing is to static i.e. the elements original or initial position, while absolute positio is relative to the parent i.e. the surface at which the element is sitting**/
.red {
  background-color: red;
  height: 100px;
  width: 100px;
  
}

.skill-row {
  width: 50%;
  /**width 50% decreases the lenght of a block element to take only 50% of the width screen while margin auto makes it centered.**/
  margin: 100px auto;  
  text-align: left;
}


.blue {
  background-color: blue;
  height: 100px;
  width: 100px;
  position: absolute;
  left: 100px;
}

.yellow {
  background-color: yellow;
  height: 100px;
  width: 100px;
  position: absolute;
  top: 200px;
  left: 200px;

}